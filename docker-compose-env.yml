name: env
services:
  # ──────────── MySQL ────────────
  mysql:
    build:
      context: .
      dockerfile: dockfile-mysql
    container_name: mysql
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - LANG=C.UTF-8
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
      - mysql-conf:/etc/mysql/conf.d
    networks:
      - env-net

  # ──────────── Redis ────────────
  redis:
    image: redis:7.4.2
    container_name: redis
    restart: unless-stopped
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    environment:
      - TZ=Asia/Shanghai
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks: 
      - env-net

  # ──────────── Elasticsearch ────────────
  es:
    build:
      context: .
      dockerfile: dockfile-es
    container_name: es
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - node.name=es
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ES_PASSWORD}

      - ES_JAVA_OPTS=-Xms768m -Xmx768m
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - es-logs:/usr/share/elasticsearch/logs
      - es-config:/usr/share/elasticsearch/config
    ports:
      - "9200:9200"
    networks:
      - env-net

  # ──────────── Kibana ────────────
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.28
    container_name: kibana
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - ELASTICSEARCH_HOSTS=http://es:9200
      - ELASTICSEARCH_USERNAME=${ES_USER}
      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
      - i18n.locale=zh-CN
    volumes:
      - kibana-config:/usr/share/kibana/config
      - kibana-data:/usr/share/kibana/data
      - kibana-logs:/usr/share/kibana/logs
    ports:
      - "5601:5601"
    depends_on:
      - es
    networks:
      - env-net

  # ──────────── Kafka (INTERNAL / SASL_PLAINTEXT) ────────────
  kafka:
    image: bitnami/kafka:4.0.0
    container_name: kafka
    restart: unless-stopped
    environment:
      # 单节点 Kraft 模式
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

      # 监听
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://10.0.4.4:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT

      - KAFKA_HEAP_OPTS=-Xms512m -Xmx512m

    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - env-net

  # ──────────── Nacos ────────────
  nacos:
    image: nacos/nacos-server:v2.3.0
    container_name: nacos
    restart: unless-stopped
    hostname: nacos
    environment:
      - TZ=Asia/Shanghai
      - MODE=standalone
      - PREFER_HOST_MODE=hostname
      - JVM_XMS=256m
      - JVM_XMX=256m
      - JVM_XMN=128m
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    networks:
      - env-net

volumes:
  mysql-data:
  mysql-logs:
  mysql-conf:
  es-data:
  es-logs:
  es-config:
  kibana-config:
  kibana-data:
  kibana-logs:

networks:
  env-net:
    name: env-net